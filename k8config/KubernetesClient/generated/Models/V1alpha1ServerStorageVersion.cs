// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// An API server instance reports the version it can decode and the version it encodes objects to when persisting objects in the backend.
    /// </summary>
    [KubernetesProperty(Description: @"An API server instance reports the version it can decode and the version it encodes objects to when persisting objects in the backend.")]
    public partial class V1alpha1ServerStorageVersion
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1ServerStorageVersion class.
        /// </summary>
        public V1alpha1ServerStorageVersion()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1ServerStorageVersion class.
        /// </summary>
        /// <param name="apiServerID">
        /// The ID of the reporting API server.
        /// </param>
        /// <param name="decodableVersions">
        /// The API server can decode objects encoded in these versions. The encodingVersion must be included in the decodableVersions.
        /// </param>
        /// <param name="encodingVersion">
        /// The API server encodes the object to this version when persisting it in the backend (e.g., etcd).
        /// </param>
        public V1alpha1ServerStorageVersion(string apiServerID = null, IList<string> decodableVersions = null, string encodingVersion = null)
        {
            ApiServerID = apiServerID;
            DecodableVersions = decodableVersions;
            EncodingVersion = encodingVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "apiServerID")]
        [KubernetesProperty(IsRequired: false, Description: @"The ID of the reporting API server.")]
        public string ApiServerID { get; set; }

        [JsonProperty(PropertyName = "decodableVersions")]
        [KubernetesProperty(IsRequired: false, Description: @"The API server can decode objects encoded in these versions. The encodingVersion must be included in the decodableVersions.")]
        public IList<string> DecodableVersions { get; set; }

        [JsonProperty(PropertyName = "encodingVersion")]
        [KubernetesProperty(IsRequired: false, Description: @"The API server encodes the object to this version when persisting it in the backend (e.g., etcd).")]
        public string EncodingVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
