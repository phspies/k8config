// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// FlowSchemaStatus represents the current state of a FlowSchema.
    /// </summary>
    [KubernetesProperty(Description: @"FlowSchemaStatus represents the current state of a FlowSchema.")]
    public partial class V1beta1FlowSchemaStatus
    {
        /// <summary>
        /// Initializes a new instance of the V1beta1FlowSchemaStatus class.
        /// </summary>
        public V1beta1FlowSchemaStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1beta1FlowSchemaStatus class.
        /// </summary>
        /// <param name="conditions">
        /// `conditions` is a list of the current states of FlowSchema.
        /// </param>
        public V1beta1FlowSchemaStatus(IList<V1beta1FlowSchemaCondition> conditions = null)
        {
            Conditions = conditions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "conditions")]
        [KubernetesProperty(IsRequired: false, Description: @"`conditions` is a list of the current states of FlowSchema.")]
        public IList<V1beta1FlowSchemaCondition> Conditions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            foreach(var obj in Conditions)
            {
                obj.Validate();
            }
        }
    }
}
