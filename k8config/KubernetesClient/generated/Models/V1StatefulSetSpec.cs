// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// A StatefulSetSpec is the specification of a StatefulSet.
    /// </summary>
    [KubernetesProperty(Description: @"A StatefulSetSpec is the specification of a StatefulSet.")]
    public partial class V1StatefulSetSpec
    {
        /// <summary>
        /// Initializes a new instance of the V1StatefulSetSpec class.
        /// </summary>
        public V1StatefulSetSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1StatefulSetSpec class.
        /// </summary>
        /// <param name="selector">
        /// selector is a label query over pods that should match the replica count. It must match the pod template&apos;s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
        /// </param>
        /// <param name="serviceName">
        /// serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where &quot;pod-specific-string&quot; is managed by the StatefulSet controller.
        /// </param>
        /// <param name="template">
        /// template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.
        /// </param>
        /// <param name="minReadySeconds">
        /// Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.
        /// </param>
        /// <param name="podManagementPolicy">
        /// podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
        /// </param>
        /// <param name="replicas">
        /// replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
        /// </param>
        /// <param name="revisionHistoryLimit">
        /// revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet&apos;s revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
        /// </param>
        /// <param name="updateStrategy">
        /// updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.
        /// </param>
        /// <param name="volumeClaimTemplates">
        /// volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
        /// </param>
        public V1StatefulSetSpec(V1LabelSelector selector, string serviceName, V1PodTemplateSpec template, int? minReadySeconds = null, string podManagementPolicy = null, int? replicas = null, int? revisionHistoryLimit = null, V1StatefulSetUpdateStrategy updateStrategy = null, IList<V1PersistentVolumeClaim> volumeClaimTemplates = null)
        {
            MinReadySeconds = minReadySeconds;
            PodManagementPolicy = podManagementPolicy;
            Replicas = replicas;
            RevisionHistoryLimit = revisionHistoryLimit;
            Selector = selector;
            ServiceName = serviceName;
            Template = template;
            UpdateStrategy = updateStrategy;
            VolumeClaimTemplates = volumeClaimTemplates;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "minReadySeconds")]
        [KubernetesProperty(IsRequired: false, Description: @"Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.")]
        public int? MinReadySeconds { get; set; }

        [JsonProperty(PropertyName = "podManagementPolicy")]
        [KubernetesProperty(IsRequired: false, Description: @"podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.")]
        public string PodManagementPolicy { get; set; }

        [JsonProperty(PropertyName = "replicas")]
        [KubernetesProperty(IsRequired: false, Description: @"replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.")]
        public int? Replicas { get; set; }

        [JsonProperty(PropertyName = "revisionHistoryLimit")]
        [KubernetesProperty(IsRequired: false, Description: @"revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet&apos;s revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.")]
        public int? RevisionHistoryLimit { get; set; }

        [JsonProperty(PropertyName = "selector")]
        [KubernetesProperty(IsRequired: true, Description: @"selector is a label query over pods that should match the replica count. It must match the pod template&apos;s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors")]
        public V1LabelSelector Selector { get; set; }

        [JsonProperty(PropertyName = "serviceName")]
        [KubernetesProperty(IsRequired: true, Description: @"serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where &quot;pod-specific-string&quot; is managed by the StatefulSet controller.")]
        public string ServiceName { get; set; }

        [JsonProperty(PropertyName = "template")]
        [KubernetesProperty(IsRequired: true, Description: @"template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.")]
        public V1PodTemplateSpec Template { get; set; }

        [JsonProperty(PropertyName = "updateStrategy")]
        [KubernetesProperty(IsRequired: false, Description: @"updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.")]
        public V1StatefulSetUpdateStrategy UpdateStrategy { get; set; }

        [JsonProperty(PropertyName = "volumeClaimTemplates")]
        [KubernetesProperty(IsRequired: false, Description: @"volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.")]
        public IList<V1PersistentVolumeClaim> VolumeClaimTemplates { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Selector == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Selector");    
            }
            if (Template == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Template");    
            }
            Selector?.Validate();
            Template?.Validate();
            UpdateStrategy?.Validate();
            foreach(var obj in VolumeClaimTemplates)
            {
                obj.Validate();
            }
        }
    }
}
