// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one &quot;target&quot; type should be set.
    /// </summary>
    [KubernetesProperty(Description: @"ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one &quot;target&quot; type should be set.")]
    public partial class V2beta1ExternalMetricSource
    {
        /// <summary>
        /// Initializes a new instance of the V2beta1ExternalMetricSource class.
        /// </summary>
        public V2beta1ExternalMetricSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V2beta1ExternalMetricSource class.
        /// </summary>
        /// <param name="metricName">
        /// metricName is the name of the metric in question.
        /// </param>
        /// <param name="metricSelector">
        /// metricSelector is used to identify a specific time series within a given metric.
        /// </param>
        /// <param name="targetAverageValue">
        /// targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.
        /// </param>
        /// <param name="targetValue">
        /// targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.
        /// </param>
        public V2beta1ExternalMetricSource(string metricName, V1LabelSelector metricSelector = null, ResourceQuantity targetAverageValue = null, ResourceQuantity targetValue = null)
        {
            MetricName = metricName;
            MetricSelector = metricSelector;
            TargetAverageValue = targetAverageValue;
            TargetValue = targetValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "metricName")]
        [KubernetesProperty(IsRequired: true, Description: @"metricName is the name of the metric in question.")]
        public string MetricName { get; set; }

        [JsonProperty(PropertyName = "metricSelector")]
        [KubernetesProperty(IsRequired: false, Description: @"metricSelector is used to identify a specific time series within a given metric.")]
        public V1LabelSelector MetricSelector { get; set; }

        [JsonProperty(PropertyName = "targetAverageValue")]
        [KubernetesProperty(IsRequired: false, Description: @"targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.")]
        public ResourceQuantity TargetAverageValue { get; set; }

        [JsonProperty(PropertyName = "targetValue")]
        [KubernetesProperty(IsRequired: false, Description: @"targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.")]
        public ResourceQuantity TargetValue { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            MetricSelector?.Validate();
            TargetAverageValue?.Validate();
            TargetValue?.Validate();
        }
    }
}
