// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// Info contains versioning information. how we&apos;ll want to distribute that information.
    /// </summary>
    [KubernetesProperty(Description: @"Info contains versioning information. how we&apos;ll want to distribute that information.")]
    public partial class VersionInfo
    {
        /// <summary>
        /// Initializes a new instance of the VersionInfo class.
        /// </summary>
        public VersionInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VersionInfo class.
        /// </summary>
        /// <param name="buildDate">
        /// 
        /// </param>
        /// <param name="compiler">
        /// 
        /// </param>
        /// <param name="gitCommit">
        /// 
        /// </param>
        /// <param name="gitTreeState">
        /// 
        /// </param>
        /// <param name="gitVersion">
        /// 
        /// </param>
        /// <param name="goVersion">
        /// 
        /// </param>
        /// <param name="major">
        /// 
        /// </param>
        /// <param name="minor">
        /// 
        /// </param>
        /// <param name="platform">
        /// 
        /// </param>
        public VersionInfo(string buildDate, string compiler, string gitCommit, string gitTreeState, string gitVersion, string goVersion, string major, string minor, string platform)
        {
            BuildDate = buildDate;
            Compiler = compiler;
            GitCommit = gitCommit;
            GitTreeState = gitTreeState;
            GitVersion = gitVersion;
            GoVersion = goVersion;
            Major = major;
            Minor = minor;
            Platform = platform;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "buildDate")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string BuildDate { get; set; }

        [JsonProperty(PropertyName = "compiler")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string Compiler { get; set; }

        [JsonProperty(PropertyName = "gitCommit")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string GitCommit { get; set; }

        [JsonProperty(PropertyName = "gitTreeState")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string GitTreeState { get; set; }

        [JsonProperty(PropertyName = "gitVersion")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string GitVersion { get; set; }

        [JsonProperty(PropertyName = "goVersion")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string GoVersion { get; set; }

        [JsonProperty(PropertyName = "major")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string Major { get; set; }

        [JsonProperty(PropertyName = "minor")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string Minor { get; set; }

        [JsonProperty(PropertyName = "platform")]
        [KubernetesProperty(IsRequired: true, Description: @"")]
        public string Platform { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
