// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// TokenRequestStatus is the result of a token request.
    /// </summary>
    [KubernetesProperty(Description: @"TokenRequestStatus is the result of a token request.")]
    public partial class V1TokenRequestStatus
    {
        /// <summary>
        /// Initializes a new instance of the V1TokenRequestStatus class.
        /// </summary>
        public V1TokenRequestStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1TokenRequestStatus class.
        /// </summary>
        /// <param name="expirationTimestamp">
        /// ExpirationTimestamp is the time of expiration of the returned token.
        /// </param>
        /// <param name="token">
        /// Token is the opaque bearer token.
        /// </param>
        public V1TokenRequestStatus(System.DateTime expirationTimestamp, string token)
        {
            ExpirationTimestamp = expirationTimestamp;
            Token = token;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "expirationTimestamp")]
        [KubernetesProperty(IsRequired: true, Description: @"ExpirationTimestamp is the time of expiration of the returned token.")]
        public System.DateTime ExpirationTimestamp { get; set; }

        [JsonProperty(PropertyName = "token")]
        [KubernetesProperty(IsRequired: true, Description: @"Token is the opaque bearer token.")]
        public string Token { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
