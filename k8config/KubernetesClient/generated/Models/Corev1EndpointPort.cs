// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// EndpointPort is a tuple that describes a single port.
    /// </summary>
    [KubernetesProperty(Description: @"EndpointPort is a tuple that describes a single port.")]
    public partial class Corev1EndpointPort
    {
        /// <summary>
        /// Initializes a new instance of the Corev1EndpointPort class.
        /// </summary>
        public Corev1EndpointPort()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Corev1EndpointPort class.
        /// </summary>
        /// <param name="port">
        /// The port number of the endpoint.
        /// </param>
        /// <param name="appProtocol">
        /// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
        /// </param>
        /// <param name="name">
        /// The name of this port.  This must match the &apos;name&apos; field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.
        /// </param>
        /// <param name="protocol">
        /// The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.
        /// </param>
        public Corev1EndpointPort(int port, string appProtocol = null, string name = null, string protocol = null)
        {
            AppProtocol = appProtocol;
            Name = name;
            Port = port;
            Protocol = protocol;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "appProtocol")]
        [KubernetesProperty(IsRequired: false, Description: @"The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.")]
        public string AppProtocol { get; set; }

        [JsonProperty(PropertyName = "name")]
        [KubernetesProperty(IsRequired: false, Description: @"The name of this port.  This must match the &apos;name&apos; field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.")]
        public string Name { get; set; }

        [JsonProperty(PropertyName = "port")]
        [KubernetesProperty(IsRequired: true, Description: @"The port number of the endpoint.")]
        public int Port { get; set; }

        [JsonProperty(PropertyName = "protocol")]
        [KubernetesProperty(IsRequired: false, Description: @"The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.")]
        public string Protocol { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
