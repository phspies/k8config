// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// Endpoint represents a single logical &quot;backend&quot; implementing a service.
    /// </summary>
    [KubernetesProperty(Description: @"Endpoint represents a single logical &quot;backend&quot; implementing a service.")]
    public partial class V1beta1Endpoint
    {
        /// <summary>
        /// Initializes a new instance of the V1beta1Endpoint class.
        /// </summary>
        public V1beta1Endpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1beta1Endpoint class.
        /// </summary>
        /// <param name="addresses">
        /// addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.
        /// </param>
        /// <param name="conditions">
        /// conditions contains information about the current status of the endpoint.
        /// </param>
        /// <param name="hints">
        /// hints contains information associated with how an endpoint should be consumed.
        /// </param>
        /// <param name="hostname">
        /// hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.
        /// </param>
        /// <param name="nodeName">
        /// nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node. This field can be enabled with the EndpointSliceNodeName feature gate.
        /// </param>
        /// <param name="targetRef">
        /// targetRef is a reference to a Kubernetes object that represents this endpoint.
        /// </param>
        /// <param name="topology">
        /// topology contains arbitrary topology information associated with the endpoint. These key/value pairs must conform with the label format. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels Topology may include a maximum of 16 key/value pairs. This includes, but is not limited to the following well known keys: * kubernetes.io/hostname: the value indicates the hostname of the node  where the endpoint is located. This should match the corresponding  node label.* topology.kubernetes.io/zone: the value indicates the zone where the  endpoint is located. This should match the corresponding node label.* topology.kubernetes.io/region: the value indicates the region where the  endpoint is located. This should match the corresponding node label.This field is deprecated and will be removed in future api versions.
        /// </param>
        public V1beta1Endpoint(IList<string> addresses, V1beta1EndpointConditions conditions = null, V1beta1EndpointHints hints = null, string hostname = null, string nodeName = null, V1ObjectReference targetRef = null, IDictionary<string, string> topology = null)
        {
            Addresses = addresses;
            Conditions = conditions;
            Hints = hints;
            Hostname = hostname;
            NodeName = nodeName;
            TargetRef = targetRef;
            Topology = topology;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        [JsonProperty(PropertyName = "addresses")]
        [KubernetesProperty(IsRequired: true, Description: @"addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.")]
        public IList<string> Addresses { get; set; }

        [JsonProperty(PropertyName = "conditions")]
        [KubernetesProperty(IsRequired: false, Description: @"conditions contains information about the current status of the endpoint.")]
        public V1beta1EndpointConditions Conditions { get; set; }

        [JsonProperty(PropertyName = "hints")]
        [KubernetesProperty(IsRequired: false, Description: @"hints contains information associated with how an endpoint should be consumed.")]
        public V1beta1EndpointHints Hints { get; set; }

        [JsonProperty(PropertyName = "hostname")]
        [KubernetesProperty(IsRequired: false, Description: @"hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.")]
        public string Hostname { get; set; }

        [JsonProperty(PropertyName = "nodeName")]
        [KubernetesProperty(IsRequired: false, Description: @"nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node. This field can be enabled with the EndpointSliceNodeName feature gate.")]
        public string NodeName { get; set; }

        [JsonProperty(PropertyName = "targetRef")]
        [KubernetesProperty(IsRequired: false, Description: @"targetRef is a reference to a Kubernetes object that represents this endpoint.")]
        public V1ObjectReference TargetRef { get; set; }

        [JsonProperty(PropertyName = "topology")]
        [KubernetesProperty(IsRequired: false, Description: @"topology contains arbitrary topology information associated with the endpoint. These key/value pairs must conform with the label format. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels Topology may include a maximum of 16 key/value pairs. This includes, but is not limited to the following well known keys: * kubernetes.io/hostname: the value indicates the hostname of the node  where the endpoint is located. This should match the corresponding  node label.* topology.kubernetes.io/zone: the value indicates the zone where the  endpoint is located. This should match the corresponding node label.* topology.kubernetes.io/region: the value indicates the region where the  endpoint is located. This should match the corresponding node label.This field is deprecated and will be removed in future api versions.")]
        public IDictionary<string, string> Topology { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            Conditions?.Validate();
            Hints?.Validate();
            TargetRef?.Validate();
        }
    }
}
